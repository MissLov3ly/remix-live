{"version":3,"file":"3341.0.38.0.1701431393233.js","mappings":"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","sources":["webpack:///../../node_modules/@nrwl/js/node_modules/@babel/runtime/helpers/interopRequireDefault.js","webpack:///../../node_modules/base64-js/index.js","webpack:///../../node_modules/buffer/index.js","webpack:///../../node_modules/ieee754/index.js","webpack:///../../node_modules/process/browser.js"],"sourcesContent":["function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n"],"names":["_interopRequireDefault","obj","__esModule","module","exports","byteLength","toByteArray","fromByteArray","lookup","revLookup","Arr","Uint8Array","Array","code","i","len","length","charCodeAt","getLens","b64","Error","validLen","indexOf","placeHoldersLen","lens","_byteLength","tmp","arr","curByte","tripletToBase64","num","encodeChunk","uint8","start","end","output","push","join","extraBytes","parts","maxChunkLength","len2","base64","ieee754","customInspectSymbol","Symbol","Buffer","SlowBuffer","INSPECT_MAX_BYTES","K_MAX_LENGTH","kMaxLength","TYPED_ARRAY_SUPPORT","typedArraySupport","console","error","proto","foo","Object","setPrototypeOf","prototype","e","defineProperty","enumerable","get","isBuffer","this","undefined","buffer","byteOffset","createBuffer","RangeError","buf","arg","encodingOrOffset","TypeError","allocUnsafe","from","poolSize","value","fromString","ArrayBuffer","isView","fromArrayView","isInstance","fromArrayBuffer","SharedArrayBuffer","valueOf","b","fromObject","toPrimitive","assertSize","size","alloc","fill","encoding","checked","allocUnsafeSlow","string","isEncoding","actual","write","slice","fromArrayLike","array","arrayView","copy","numberIsNaN","type","isArray","data","toString","_isBuffer","compare","a","offset","x","y","Math","min","String","toLowerCase","concat","list","pos","set","call","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","swap16","swap32","swap64","apply","toLocaleString","equals","inspect","str","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","bidirectionalIndexOf","val","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","j","includes","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","base64Write","ucs2Write","utf16leToBytes","isFinite","toJSON","_arr","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","ret","out","hexSliceLookupTable","bytes","newBuf","subarray","checkOffset","ext","readUintLE","readUIntLE","noAssert","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","lo","hi","BigInt","readBigUInt64BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","checkInt","writeUintLE","writeUIntLE","maxBytes","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","checkIEEE754","writeFloat","littleEndian","writeFloatLE","writeFloatBE","writeDouble","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","NodeError","constructor","super","writable","configurable","name","stack","message","range","input","msg","received","isInteger","abs","addNumericalSeparator","checkBounds","ERR_OUT_OF_RANGE","ERR_INVALID_ARG_TYPE","floor","ERR_BUFFER_OUT_OF_BOUNDS","INVALID_BASE64_RE","base64clean","split","units","Infinity","leadSurrogate","byteArray","c","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","isNaN","log","LN2","process","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","setTimeout","clearTimeout","runTimeout","fun","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","drainQueue","timeout","run","nextTick","args","Item","title","browser","env","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask"],"sourceRoot":""}